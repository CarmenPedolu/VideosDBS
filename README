Pedolu Carmen-Petronela, 322CA
Object Oriented Programming Course
Homework - VideosDB

November 2021

Am creat clasa Database, care contine inputul primit, membrii clasei Database
sunt liste de clase din pachetul entities, acestea fiind asematoare cu cele din
fileio, dar la unele am adaugat niste campuri suplimentare. In cadrul
constructorului din clasa Database se seteaza de cate ori apare un video la
favorite si cate vizualizari are.

In main am luat actiunile care trebuie facute si pentru fiecare actiune vedeam
ce tip are si o aplicam, iar apoi scriam mesajul in fisier.

Executia actiunilor se face folosind clase specifice actiunii, implementate in
pachetul execution.

Daca tipul actiunii este "command" se creeaza un obiect de tipul Command si se
apeleaza functia specifica. Pentru comanda favorite, mai intai verific sa nu
fie adaugat deja video-ul in lista de favorite a utilizatorului si sa fie
vizionat de utilizator, iar apoi il adaug in lista de favorite a utilizatorului
si incrementez numarul de aparitii in lista de favorite a utilizatorilor.
Pentru comanda view incrementez numarul de vizualizari al video-ului si adaug
video-ul in istoricul utilizaatorului. Pentru comanda rating, verific ca
video-ul sa fie deja vizualizat de utilizator si sa nu ii fi dat rating deja.
Apoi fac un ArrayList cu toate rating-urile video-ului si calculez media lor.
Pentru user setez ca a dat rating la acest video si incrementez numarul de
rating-uri date de user.

Daca tipul actiunii este "query", tipul obiectului pentru care se aplica este
"actors" si criteriul este "average", folosesc clasa Query si metoda
averageActor in care fac un HashMap care are un String ca cheie si un Double ca
si valoare, iar in aceste pun numele actorului si media rating-urilor
video-urilor in care a jucat, ignorand filemele si serialele cu rating 0. Apoi
apelez metoda statica din pachetul utils sortedDoubleAlphabetical. Pentru
"awards" folosesc clasa AwardsQuery si metoda awards care verifica pentru
fiecare actor daca a primit acele premii si daca le-a primit pune intr-un
HashMap, care are un String ca cheie si un Integer ca si valoare, numele
actorului si numarul total de premii. Apoi apelez metoda statica din pachetul
utils sortedIntegerAlphabetical. Pentru criteriul "Filter Description" folosesc
clasa DescriptQuery care ia fiecare actor si inlocuieste toate elementele
dintre cuvintele de la descrierea carierei cu spatii si apoi verifica daca
descrierea contine cuvantul respectiv, daca il contine adaug numele intr-o
lista si o sortez dupa cum se cere.
Daca tipul criteriului este video sau shows, iar criteriul este query, iau
fiecare video sau show, verific daca respecta filtrele respective, iar daca da,
adaug intr-un Map numele video-ului sau show-ului si rating-ul acestuia, daca
era diferit de 0, apoi folosesc functia sortedDoubleAlphabetical. La fel
procedez si pentru favorite, most viewed si longest. In cazul metodei
longestSerials m-am folosit de metoda getDuration din clasa Serial pentru a
calcula cat dureaza vizionarea serialului. Daca tipul criteriului este users
procedez ca anterior, fac un Map in care pun username-ul si cate rating-uri a
dat fiecare user, excluzandu-i pe cei care nu au dat deloc rating, iar apoi
folosesc metoda sortedIntegerAlphabetical.

Daca tipul actiunii este "recommendation", se creeaza un obiect de tipul
Recommendation si se aplica metoda specifica tipului de recomandare.
Pentru recomandarea standard cautam mai intai primul film nevazut, daca nu
gaseam niciunul, cautam un serial nevazut. Pentru recomandarea best unseen
am pus intr-un LinkedHashMap toate filmele si serialele cu ratingul primit,
am sortat in functie de rating si am returnat primul video nevazut. La fel am
procedat si pentru favorite. Pentru recomandarea popular, am facut un
LinkedHashMap in care puneam numele genului si numarul total de vizualizari
pentru toate video-urile din acel map, am sortat map-ul in functie de numarul
de vizualizari folosind metoda sortedMapDescendentInteger si apoi am cautat
primul video nevazut din cel mai popular gen. Pentru recomadarea search, am
folosit clasa SearchRecommendation, si am apelat metoda search care adauga
intr-un LinkedHashMap toate video-urile de acel gen, apoi il sortam si
rezultatul era lista de stringuri cu numele video-urilor, din care am scos
video-urile vazute de user.

In pachetul utils, am cateva metode statice pe care le-am apelat in tema.
Metoda sortedIntegerAlphabetical, sorteaza un map dupa valori(Integer), iar
daca acestea sunt egale, dupa nume, rezultatul sortarii find o lista de
stringuri, apoi se sterg ultimile elemente din lista daca numarul de cerut este
mai mare decat numarul de elemente din lista pana se ajunge la numarul dorit,
iar apoi se returneaza mesajul cerut. Analog se procedeaza si la metoda
sortedDoubleAlphabetical, aceasta avand valori de tip Double in Map.
Metoda sortedMapDescendentInteger, sorteaza un LinkedHashMap cu valori Integer
descrescator in functie de valori si returneaza o lista cu cheile sortate.
Analog se procedeaza si la metoda sortedDoubleAlphabetical, aceasta avand
valori de tip Double in LinkedHashMap.
Metoda filerMovie returneaza true sau false daca filmul respecta sau nu acele
filtre. Analog procedeaza si metoda filterSerial, fiind aplicata doar pe
seriale.